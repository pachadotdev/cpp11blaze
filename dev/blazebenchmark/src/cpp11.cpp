// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// 02_matrix_calculation.cpp
int matrix_calculation_01_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_matrix_calculation_01_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_calculation_01_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 02_matrix_calculation.cpp
int matrix_calculation_02_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_matrix_calculation_02_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_calculation_02_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 02_matrix_calculation.cpp
int matrix_calculation_03_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_matrix_calculation_03_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_calculation_03_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 02_matrix_calculation.cpp
int matrix_calculation_04_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_matrix_calculation_04_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_calculation_04_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 02_matrix_calculation.cpp
int matrix_calculation_05_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_matrix_calculation_05_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_calculation_05_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 03_matrix_functions.cpp
int matrix_functions_01_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_matrix_functions_01_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_functions_01_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 03_matrix_functions.cpp
int matrix_functions_02_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_matrix_functions_02_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_functions_02_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 03_matrix_functions.cpp
int matrix_functions_03_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_matrix_functions_03_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_functions_03_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 03_matrix_functions.cpp
int matrix_functions_04_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_matrix_functions_04_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_functions_04_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 03_matrix_functions.cpp
int matrix_functions_05_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_matrix_functions_05_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_functions_05_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 04_programmation.cpp
int programmation_01_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_programmation_01_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(programmation_01_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 04_programmation.cpp
int programmation_02_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_programmation_02_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(programmation_02_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 04_programmation.cpp
int programmation_03_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_programmation_03_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(programmation_03_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 04_programmation.cpp
int programmation_04_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_programmation_04_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(programmation_04_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 04_programmation.cpp
int programmation_05_blaze_(const int& n);
extern "C" SEXP _blazebenchmark_programmation_05_blaze_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(programmation_05_blaze_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_blazebenchmark_matrix_calculation_01_blaze_", (DL_FUNC) &_blazebenchmark_matrix_calculation_01_blaze_, 1},
    {"_blazebenchmark_matrix_calculation_02_blaze_", (DL_FUNC) &_blazebenchmark_matrix_calculation_02_blaze_, 1},
    {"_blazebenchmark_matrix_calculation_03_blaze_", (DL_FUNC) &_blazebenchmark_matrix_calculation_03_blaze_, 1},
    {"_blazebenchmark_matrix_calculation_04_blaze_", (DL_FUNC) &_blazebenchmark_matrix_calculation_04_blaze_, 1},
    {"_blazebenchmark_matrix_calculation_05_blaze_", (DL_FUNC) &_blazebenchmark_matrix_calculation_05_blaze_, 1},
    {"_blazebenchmark_matrix_functions_01_blaze_",   (DL_FUNC) &_blazebenchmark_matrix_functions_01_blaze_,   1},
    {"_blazebenchmark_matrix_functions_02_blaze_",   (DL_FUNC) &_blazebenchmark_matrix_functions_02_blaze_,   1},
    {"_blazebenchmark_matrix_functions_03_blaze_",   (DL_FUNC) &_blazebenchmark_matrix_functions_03_blaze_,   1},
    {"_blazebenchmark_matrix_functions_04_blaze_",   (DL_FUNC) &_blazebenchmark_matrix_functions_04_blaze_,   1},
    {"_blazebenchmark_matrix_functions_05_blaze_",   (DL_FUNC) &_blazebenchmark_matrix_functions_05_blaze_,   1},
    {"_blazebenchmark_programmation_01_blaze_",      (DL_FUNC) &_blazebenchmark_programmation_01_blaze_,      1},
    {"_blazebenchmark_programmation_02_blaze_",      (DL_FUNC) &_blazebenchmark_programmation_02_blaze_,      1},
    {"_blazebenchmark_programmation_03_blaze_",      (DL_FUNC) &_blazebenchmark_programmation_03_blaze_,      1},
    {"_blazebenchmark_programmation_04_blaze_",      (DL_FUNC) &_blazebenchmark_programmation_04_blaze_,      1},
    {"_blazebenchmark_programmation_05_blaze_",      (DL_FUNC) &_blazebenchmark_programmation_05_blaze_,      1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_blazebenchmark(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
