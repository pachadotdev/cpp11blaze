// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// 02_matrix_calculation.cpp
int matrix_calculation_01_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_matrix_calculation_01_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_calculation_01_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 02_matrix_calculation.cpp
int matrix_calculation_02_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_matrix_calculation_02_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_calculation_02_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 02_matrix_calculation.cpp
int matrix_calculation_03_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_matrix_calculation_03_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_calculation_03_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 02_matrix_calculation.cpp
int matrix_calculation_04_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_matrix_calculation_04_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_calculation_04_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 02_matrix_calculation.cpp
int matrix_calculation_05_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_matrix_calculation_05_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_calculation_05_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 03_matrix_functions.cpp
int matrix_functions_01_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_matrix_functions_01_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_functions_01_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 03_matrix_functions.cpp
int matrix_functions_02_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_matrix_functions_02_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_functions_02_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 03_matrix_functions.cpp
int matrix_functions_03_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_matrix_functions_03_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_functions_03_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 03_matrix_functions.cpp
int matrix_functions_04_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_matrix_functions_04_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_functions_04_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 03_matrix_functions.cpp
int matrix_functions_05_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_matrix_functions_05_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix_functions_05_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 04_programmation.cpp
int programmation_01_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_programmation_01_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(programmation_01_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 04_programmation.cpp
int programmation_02_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_programmation_02_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(programmation_02_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 04_programmation.cpp
int programmation_03_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_programmation_03_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(programmation_03_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 04_programmation.cpp
int programmation_04_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_programmation_04_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(programmation_04_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 04_programmation.cpp
int programmation_05_eigen_(const int& n);
extern "C" SEXP _eigenbenchmark_programmation_05_eigen_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(programmation_05_eigen_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 05_balassa_index.cpp
doubles_matrix<> balassa_eigen_(const doubles_matrix<>& x);
extern "C" SEXP _eigenbenchmark_balassa_eigen_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(balassa_eigen_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_eigenbenchmark_balassa_eigen_",               (DL_FUNC) &_eigenbenchmark_balassa_eigen_,               1},
    {"_eigenbenchmark_matrix_calculation_01_eigen_", (DL_FUNC) &_eigenbenchmark_matrix_calculation_01_eigen_, 1},
    {"_eigenbenchmark_matrix_calculation_02_eigen_", (DL_FUNC) &_eigenbenchmark_matrix_calculation_02_eigen_, 1},
    {"_eigenbenchmark_matrix_calculation_03_eigen_", (DL_FUNC) &_eigenbenchmark_matrix_calculation_03_eigen_, 1},
    {"_eigenbenchmark_matrix_calculation_04_eigen_", (DL_FUNC) &_eigenbenchmark_matrix_calculation_04_eigen_, 1},
    {"_eigenbenchmark_matrix_calculation_05_eigen_", (DL_FUNC) &_eigenbenchmark_matrix_calculation_05_eigen_, 1},
    {"_eigenbenchmark_matrix_functions_01_eigen_",   (DL_FUNC) &_eigenbenchmark_matrix_functions_01_eigen_,   1},
    {"_eigenbenchmark_matrix_functions_02_eigen_",   (DL_FUNC) &_eigenbenchmark_matrix_functions_02_eigen_,   1},
    {"_eigenbenchmark_matrix_functions_03_eigen_",   (DL_FUNC) &_eigenbenchmark_matrix_functions_03_eigen_,   1},
    {"_eigenbenchmark_matrix_functions_04_eigen_",   (DL_FUNC) &_eigenbenchmark_matrix_functions_04_eigen_,   1},
    {"_eigenbenchmark_matrix_functions_05_eigen_",   (DL_FUNC) &_eigenbenchmark_matrix_functions_05_eigen_,   1},
    {"_eigenbenchmark_programmation_01_eigen_",      (DL_FUNC) &_eigenbenchmark_programmation_01_eigen_,      1},
    {"_eigenbenchmark_programmation_02_eigen_",      (DL_FUNC) &_eigenbenchmark_programmation_02_eigen_,      1},
    {"_eigenbenchmark_programmation_03_eigen_",      (DL_FUNC) &_eigenbenchmark_programmation_03_eigen_,      1},
    {"_eigenbenchmark_programmation_04_eigen_",      (DL_FUNC) &_eigenbenchmark_programmation_04_eigen_,      1},
    {"_eigenbenchmark_programmation_05_eigen_",      (DL_FUNC) &_eigenbenchmark_programmation_05_eigen_,      1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_eigenbenchmark(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
